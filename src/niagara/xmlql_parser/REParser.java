
//----------------------------------------------------
// The following code was generated by CUP v0.10j
// Thu Feb 23 15:12:39 PST 2012
//----------------------------------------------------

package niagara.xmlql_parser;

import niagara.logical.*;
import niagara.logical.predicates.*;
import niagara.connection_server.InvalidPlanException;
import java.util.*;
import java_cup.runtime.*;

/** CUP v0.10j generated parser.
  * @version Thu Feb 23 15:12:39 PST 2012
  */
public class REParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public REParser() {super();}

  /** Constructor which sets the default scanner. */
  public REParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\153\000\002\002\004\000\002\003\004\000\002\004" +
    "\004\000\002\004\002\000\002\005\012\000\002\005\011" +
    "\000\002\006\004\000\002\006\002\000\002\007\005\000" +
    "\002\007\003\000\002\010\005\000\002\011\004\000\002" +
    "\011\003\000\002\011\003\000\002\012\004\000\002\012" +
    "\003\000\002\013\005\000\002\014\004\000\002\015\004" +
    "\000\002\016\005\000\002\016\004\000\002\017\003\000" +
    "\002\017\003\000\002\017\003\000\002\020\005\000\002" +
    "\020\005\000\002\020\005\000\002\020\004\000\002\021" +
    "\004\000\002\021\003\000\002\022\005\000\002\022\003" +
    "\000\002\023\005\000\002\023\003\000\002\023\005\000" +
    "\002\024\004\000\002\025\004\000\002\025\002\000\002" +
    "\026\006\000\002\026\006\000\002\026\005\000\002\027" +
    "\004\000\002\027\003\000\002\031\005\000\002\032\005" +
    "\000\002\032\003\000\002\030\005\000\002\030\005\000" +
    "\002\030\004\000\002\030\005\000\002\030\003\000\002" +
    "\034\005\000\002\033\003\000\002\033\003\000\002\033" +
    "\003\000\002\033\003\000\002\035\003\000\002\035\003" +
    "\000\002\035\003\000\002\035\003\000\002\035\003\000" +
    "\002\035\003\000\002\036\004\000\002\036\004\000\002" +
    "\036\002\000\002\037\007\000\002\037\007\000\002\042" +
    "\004\000\002\042\004\000\002\042\002\000\002\040\004" +
    "\000\002\040\002\000\002\041\005\000\002\041\005\000" +
    "\002\041\004\000\002\041\004\000\002\043\004\000\002" +
    "\043\004\000\002\043\004\000\002\043\005\000\002\043" +
    "\005\000\002\043\005\000\002\043\003\000\002\043\003" +
    "\000\002\043\003\000\002\043\003\000\002\044\005\000" +
    "\002\044\006\000\002\045\004\000\002\046\005\000\002" +
    "\046\003\000\002\050\005\000\002\050\003\000\002\051" +
    "\005\000\002\051\003\000\002\047\003\000\002\047\003" +
    "\000\002\047\006\000\002\047\005\000\002\052\010\000" +
    "\002\052\010\000\002\052\006\000\002\052\006\000\002" +
    "\053\006\000\002\053\005\000\002\053\003\000\002\053" +
    "\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\021\000\014\012\006\026\010\042\011\043\004\045" +
    "\007\001\002\000\020\002\uffad\013\uffad\020\uffad\021\uffad" +
    "\022\uffad\023\uffad\025\uffad\001\002\000\016\002\023\020" +
    "\020\021\017\022\016\023\013\025\015\001\002\000\014" +
    "\012\006\026\010\042\011\043\004\045\007\001\002\000" +
    "\020\002\uffaf\013\uffaf\020\uffaf\021\uffaf\022\uffaf\023\uffaf" +
    "\025\uffaf\001\002\000\020\002\uffac\013\uffac\020\uffac\021" +
    "\uffac\022\uffac\023\uffac\025\uffac\001\002\000\020\002\uffae" +
    "\013\uffae\020\uffae\021\uffae\022\uffae\023\uffae\025\uffae\001" +
    "\002\000\016\013\014\020\020\021\017\022\016\023\013" +
    "\025\015\001\002\000\020\002\uffb5\013\uffb5\020\uffb5\021" +
    "\uffb5\022\uffb5\023\uffb5\025\uffb5\001\002\000\020\002\uffb0" +
    "\013\uffb0\020\uffb0\021\uffb0\022\uffb0\023\uffb0\025\uffb0\001" +
    "\002\000\014\012\006\026\010\042\011\043\004\045\007" +
    "\001\002\000\020\002\uffb4\013\uffb4\020\uffb4\021\uffb4\022" +
    "\uffb4\023\uffb4\025\uffb4\001\002\000\020\002\uffb3\013\uffb3" +
    "\020\uffb3\021\uffb3\022\uffb3\023\uffb3\025\uffb3\001\002\000" +
    "\014\012\006\026\010\042\011\043\004\045\007\001\002" +
    "\000\020\002\uffb2\013\uffb2\020\uffb2\021\017\022\016\023" +
    "\013\025\uffb2\001\002\000\020\002\uffb1\013\uffb1\020\020" +
    "\021\017\022\016\023\013\025\uffb1\001\002\000\004\002" +
    "\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\021\000\004\043\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\043\011\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\043\021\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\043\020\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$REParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$REParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$REParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



  public void report_error(String message, Object info) 
  {
 	StringBuffer m = new StringBuffer("Error");

   	 if ( info instanceof java_cup.runtime.Symbol ) {
        	java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol)info);
       		if (s.left >= 0) {
        	 m.append(" in line "+(s.left+1));
         
        	 if (s.right >= 0)
          	 m.append(", column "+(s.right+1));
                 if (s.value == null)
                   m.append(", value NULL");
                 else 
		   m.append(", value "+s.value.toString());
		 m.append(", sym "+s.sym);
     	  }
     	}
     
   	m.append(" : "+message);
     	System.err.println(m);
   }
   
   public void report_fatal_error(String message, Object info) throws Exception
   {
     report_error(message, info);
     throw new InvalidPlanException("Irrecoverable Parse Error. Check query syntax");
   }


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$REParser$actions {
  private final REParser parser;

  /** Constructor */
  CUP$REParser$actions(REParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$REParser$do_action(
    int                        CUP$REParser$act_num,
    java_cup.runtime.lr_parser CUP$REParser$parser,
    java.util.Stack            CUP$REParser$stack,
    int                        CUP$REParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$REParser$result;

      /* select the action based on the action number */
      switch (CUP$REParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // SkolemOrIdAttr ::= VAR 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new attr("id",new data(dataType.VAR,v)); 
              CUP$REParser$result = new java_cup.runtime.Symbol(41/*SkolemOrIdAttr*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // SkolemOrIdAttr ::= STRING 
            {
              Object RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new attr("id",new data(dataType.STRING,s)); 
              CUP$REParser$result = new java_cup.runtime.Symbol(41/*SkolemOrIdAttr*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // SkolemOrIdAttr ::= IDEN LPAREN RPAREN 
            {
              Object RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		 RESULT = new skolem(s, new Vector()); 
              CUP$REParser$result = new java_cup.runtime.Symbol(41/*SkolemOrIdAttr*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // SkolemOrIdAttr ::= IDEN LPAREN VarList RPAREN 
            {
              Object RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-3)).value;
		int vlleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int vlright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector vl = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 RESULT = new skolem(s, vl); 
              CUP$REParser$result = new java_cup.runtime.Symbol(41/*SkolemOrIdAttr*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // StartTag ::= LT VAR AttributeList GT 
            {
              startTag RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int alleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int alright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector al = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 RESULT = new startTag(new data(dataType.VAR, v), null, al); 
              CUP$REParser$result = new java_cup.runtime.Symbol(40/*StartTag*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // StartTag ::= LT IDEN AttributeList GT 
            {
              startTag RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int alleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int alright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector al = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 RESULT = new startTag(new data(dataType.IDEN, i), null, al); 
              CUP$REParser$result = new java_cup.runtime.Symbol(40/*StartTag*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // StartTag ::= LT VAR IDEQ SkolemOrIdAttr AttributeList GT 
            {
              startTag RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-4)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-4)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-4)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		Object s = (Object)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int alleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int alright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector al = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 if (!(s instanceof skolem)) { 
		      al.insertElementAt(s, 0); s = null;
		   }
           RESULT = new startTag(new data(dataType.VAR, v), (skolem) s, al); 
              CUP$REParser$result = new java_cup.runtime.Symbol(40/*StartTag*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // StartTag ::= LT IDEN IDEQ SkolemOrIdAttr AttributeList GT 
            {
              startTag RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-4)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-4)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-4)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		Object s = (Object)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int alleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int alright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector al = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 if (!(s instanceof skolem)) { 
		      al.insertElementAt(s, 0); s = null;
		   }
		   RESULT = new startTag(new data(dataType.IDEN, i), (skolem) s, al); 
              CUP$REParser$result = new java_cup.runtime.Symbol(40/*StartTag*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // DataSource ::= IDEN LPAREN RPAREN 
            {
              data RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(37/*DataSource*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // DataSource ::= IDEN LPAREN DataSourceList RPAREN 
            {
              data RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(37/*DataSource*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // DataSource ::= STRING 
            {
              data RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new data(dataType.STRING, s); 
              CUP$REParser$result = new java_cup.runtime.Symbol(37/*DataSource*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // DataSource ::= VAR 
            {
              data RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new data(dataType.VAR, v); 
              CUP$REParser$result = new java_cup.runtime.Symbol(37/*DataSource*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // DataSourceList ::= DataSource 
            {
              Vector RESULT = null;
		int dleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		data d = (data)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new Vector(); RESULT.addElement(d); 
              CUP$REParser$result = new java_cup.runtime.Symbol(39/*DataSourceList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // DataSourceList ::= DataSourceList COMMA DataSource 
            {
              Vector RESULT = null;
		int dlleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int dlright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		Vector dl = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int dleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		data d = (data)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 dl.addElement(d); RESULT = dl; 
              CUP$REParser$result = new java_cup.runtime.Symbol(39/*DataSourceList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // DataSourceSet ::= DataSource 
            {
              Vector RESULT = null;
		int dleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		data d = (data)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new Vector(); RESULT.addElement(d); 
              CUP$REParser$result = new java_cup.runtime.Symbol(38/*DataSourceSet*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // DataSourceSet ::= LBRACE DataSourceList RBRACE 
            {
              Vector RESULT = null;
		int dlleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int dlright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector dl = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 RESULT = dl; 
              CUP$REParser$result = new java_cup.runtime.Symbol(38/*DataSourceSet*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // VarList ::= VAR 
            {
              Vector RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new Vector(); RESULT.addElement(v); 
              CUP$REParser$result = new java_cup.runtime.Symbol(36/*VarList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // VarList ::= VarList COMMA VAR 
            {
              Vector RESULT = null;
		int vlleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int vlright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		Vector vl = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 vl.addElement(v); RESULT = vl; 
              CUP$REParser$result = new java_cup.runtime.Symbol(36/*VarList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // OrderedBy ::= ORDERED_BY VarList 
            {
              Object RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(35/*OrderedBy*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // EndTag ::= LT SLASH IDEN GT 
            {
              Object RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(34/*EndTag*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // EndTag ::= LT SLASH GT 
            {
              Object RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(34/*EndTag*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // RegularExpression ::= DOLLAR 
            {
              regExp RESULT = null;
		 RESULT = new regExpOpNode(opType.DOLLAR); 
              CUP$REParser$result = new java_cup.runtime.Symbol(33/*RegularExpression*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // RegularExpression ::= ID 
            {
              regExp RESULT = null;
		 RESULT = new regExpDataNode(new data(dataType.IDEN,"id")); 
              CUP$REParser$result = new java_cup.runtime.Symbol(33/*RegularExpression*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // RegularExpression ::= END 
            {
              regExp RESULT = null;
		 RESULT = new regExpDataNode(new data(dataType.IDEN,"end")); 
              CUP$REParser$result = new java_cup.runtime.Symbol(33/*RegularExpression*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // RegularExpression ::= IDEN 
            {
              regExp RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new regExpDataNode(new data(dataType.IDEN,i)); 
              CUP$REParser$result = new java_cup.runtime.Symbol(33/*RegularExpression*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // RegularExpression ::= LPAREN RegularExpression RPAREN 
            {
              regExp RESULT = null;
		int rleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		regExp r = (regExp)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 RESULT = r; 
              CUP$REParser$result = new java_cup.runtime.Symbol(33/*RegularExpression*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // RegularExpression ::= RegularExpression BAR RegularExpression 
            {
              regExp RESULT = null;
		int r1left = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int r1right = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		regExp r1 = (regExp)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int r2left = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int r2right = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		regExp r2 = (regExp)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new regExpOpNode(opType.BAR, r1, r2); 
              CUP$REParser$result = new java_cup.runtime.Symbol(33/*RegularExpression*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // RegularExpression ::= RegularExpression DOT RegularExpression 
            {
              regExp RESULT = null;
		int r1left = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int r1right = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		regExp r1 = (regExp)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int r2left = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int r2right = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		regExp r2 = (regExp)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new regExpOpNode(opType.DOT, r1, r2); 
              CUP$REParser$result = new java_cup.runtime.Symbol(33/*RegularExpression*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // RegularExpression ::= RegularExpression QMARK 
            {
              regExp RESULT = null;
		int rleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		regExp r = (regExp)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 RESULT = new regExpOpNode(opType.QMARK, r); 
              CUP$REParser$result = new java_cup.runtime.Symbol(33/*RegularExpression*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // RegularExpression ::= RegularExpression PLUS 
            {
              regExp RESULT = null;
		int rleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		regExp r = (regExp)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 RESULT = new regExpOpNode(opType.PLUS, r); 
              CUP$REParser$result = new java_cup.runtime.Symbol(33/*RegularExpression*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // RegularExpression ::= RegularExpression STAR 
            {
              regExp RESULT = null;
		int rleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		regExp r = (regExp)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 RESULT = new regExpOpNode(opType.STAR, r); 
              CUP$REParser$result = new java_cup.runtime.Symbol(33/*RegularExpression*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Attribute ::= IDEQ VAR 
            {
              attr RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new attr("id",new data(dataType.VAR,v)); 
              CUP$REParser$result = new java_cup.runtime.Symbol(31/*Attribute*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Attribute ::= IDEQ STRING 
            {
              attr RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new attr("id",new data(dataType.STRING,s)); 
              CUP$REParser$result = new java_cup.runtime.Symbol(31/*Attribute*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Attribute ::= IDEN EQ VAR 
            {
              attr RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new attr(i,new data(dataType.VAR,v)); 
              CUP$REParser$result = new java_cup.runtime.Symbol(31/*Attribute*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Attribute ::= IDEN EQ STRING 
            {
              attr RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new attr(i,new data(dataType.STRING,s)); 
              CUP$REParser$result = new java_cup.runtime.Symbol(31/*Attribute*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // AttributeList ::= 
            {
              Vector RESULT = null;
		 RESULT = new Vector(); 
              CUP$REParser$result = new java_cup.runtime.Symbol(30/*AttributeList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // AttributeList ::= AttributeList Attribute 
            {
              Vector RESULT = null;
		int alleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int alright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector al = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		attr a = (attr)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 al.addElement(a); RESULT=al; 
              CUP$REParser$result = new java_cup.runtime.Symbol(30/*AttributeList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Ids ::= 
            {
              attr RESULT = null;
		 RESULT = null; 
              CUP$REParser$result = new java_cup.runtime.Symbol(32/*Ids*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Ids ::= IDEQ VAR 
            {
              attr RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new attr(new String("ID"),new data(dataType.VAR,v)); 
              CUP$REParser$result = new java_cup.runtime.Symbol(32/*Ids*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Ids ::= IDEQ STRING 
            {
              attr RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new attr(new String("ID"),new data(dataType.STRING,s)); 
              CUP$REParser$result = new java_cup.runtime.Symbol(32/*Ids*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // StartTagPattern ::= LT VAR Ids AttributeList GT 
            {
              stp RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-3)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		attr i = (attr)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int alleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int alright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector al = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 if(i != null)
		              al.addElement(i);	
			   RESULT = new stp(new regExpDataNode(new data(dataType.VAR, v)), al); 
              CUP$REParser$result = new java_cup.runtime.Symbol(29/*StartTagPattern*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // StartTagPattern ::= LT RegularExpression Ids AttributeList GT 
            {
              stp RESULT = null;
		int rleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).right;
		regExp r = (regExp)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-3)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		attr i = (attr)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int alleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int alright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector al = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 if(i != null)
		              al.addElement(i);	
			   RESULT = new stp(r, al); 
              CUP$REParser$result = new java_cup.runtime.Symbol(29/*StartTagPattern*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // BindingAs ::= 
            {
              data RESULT = null;
		 RESULT = null; 
              CUP$REParser$result = new java_cup.runtime.Symbol(28/*BindingAs*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // BindingAs ::= CONTENT_AS VAR 
            {
              data RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new data(dataType.CONTENT_AS, v); 
              CUP$REParser$result = new java_cup.runtime.Symbol(28/*BindingAs*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // BindingAs ::= ELEMENT_AS VAR 
            {
              data RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new data(dataType.ELEMENT_AS, v); 
              CUP$REParser$result = new java_cup.runtime.Symbol(28/*BindingAs*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // OpRel ::= EQ 
            {
              Integer RESULT = null;
		 RESULT = new Integer(opType.EQ); 
              CUP$REParser$result = new java_cup.runtime.Symbol(27/*OpRel*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // OpRel ::= NEQ 
            {
              Integer RESULT = null;
		 RESULT = new Integer(opType.NEQ); 
              CUP$REParser$result = new java_cup.runtime.Symbol(27/*OpRel*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // OpRel ::= GEQ 
            {
              Integer RESULT = null;
		 RESULT = new Integer(opType.GEQ); 
              CUP$REParser$result = new java_cup.runtime.Symbol(27/*OpRel*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // OpRel ::= LEQ 
            {
              Integer RESULT = null;
		 RESULT = new Integer(opType.LEQ); 
              CUP$REParser$result = new java_cup.runtime.Symbol(27/*OpRel*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // OpRel ::= GT 
            {
              Integer RESULT = null;
		 RESULT = new Integer(opType.GT); 
              CUP$REParser$result = new java_cup.runtime.Symbol(27/*OpRel*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // OpRel ::= LT 
            {
              Integer RESULT = null;
		 RESULT = new Integer(opType.LT); 
              CUP$REParser$result = new java_cup.runtime.Symbol(27/*OpRel*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Expression ::= STRING 
            {
              Atom RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new StringConstant(s); 
              CUP$REParser$result = new java_cup.runtime.Symbol(25/*Expression*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Expression ::= VAR 
            {
              Atom RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new OldVariable(v); 
              CUP$REParser$result = new java_cup.runtime.Symbol(25/*Expression*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Expression ::= IDEN 
            {
              Atom RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new StringConstant(i); 
              CUP$REParser$result = new java_cup.runtime.Symbol(25/*Expression*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Expression ::= NUMBER 
            {
              Atom RESULT = null;
		int nleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new NumericConstant(n); 
              CUP$REParser$result = new java_cup.runtime.Symbol(25/*Expression*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // BoolExp ::= Expression OpRel Expression 
            {
              Predicate RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		Atom e1 = (Atom)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Integer o = (Integer)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		Atom e2 = (Atom)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		  RESULT = Comparison.newComparison(o.intValue(), e1, e2); 
              CUP$REParser$result = new java_cup.runtime.Symbol(26/*BoolExp*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Predicate ::= BoolExp 
            {
              Predicate RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		Predicate b = (Predicate)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = b; 
              CUP$REParser$result = new java_cup.runtime.Symbol(22/*Predicate*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Predicate ::= LPAREN Predicate RPAREN 
            {
              Predicate RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Predicate p = (Predicate)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 RESULT = p; 
              CUP$REParser$result = new java_cup.runtime.Symbol(22/*Predicate*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Predicate ::= NOT Predicate 
            {
              Predicate RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		Predicate p = (Predicate)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new Not(p); 
              CUP$REParser$result = new java_cup.runtime.Symbol(22/*Predicate*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Predicate ::= Predicate OR Predicate 
            {
              Predicate RESULT = null;
		int p1left = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int p1right = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		Predicate p1 = (Predicate)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		Predicate p2 = (Predicate)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new Or(p1, p2); 
              CUP$REParser$result = new java_cup.runtime.Symbol(22/*Predicate*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Predicate ::= Predicate AND Predicate 
            {
              Predicate RESULT = null;
		int p1left = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int p1right = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		Predicate p1 = (Predicate)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		Predicate p2 = (Predicate)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new And(p1, p2); 
              CUP$REParser$result = new java_cup.runtime.Symbol(22/*Predicate*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // SetElemList ::= IDEN 
            {
              Vector RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new Vector(); RESULT.addElement(new data(dataType.IDEN,i)); 
              CUP$REParser$result = new java_cup.runtime.Symbol(24/*SetElemList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // SetElemList ::= SetElemList COMMA IDEN 
            {
              Vector RESULT = null;
		int slleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int slright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		Vector sl = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 sl.addElement(new data(dataType.IDEN,i)); RESULT = sl; 
              CUP$REParser$result = new java_cup.runtime.Symbol(24/*SetElemList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Sets ::= LBRACE SetElemList RBRACE 
            {
              Vector RESULT = null;
		int slleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int slright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector sl = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 RESULT = sl; 
              CUP$REParser$result = new java_cup.runtime.Symbol(23/*Sets*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // PatternList ::= Pattern 
            {
              Vector RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		pattern p = (pattern)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new Vector(); RESULT.addElement(p); 
              CUP$REParser$result = new java_cup.runtime.Symbol(21/*PatternList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // PatternList ::= PatternList Pattern 
            {
              Vector RESULT = null;
		int plleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int plright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector pl = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		pattern p = (pattern)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 pl.addElement(p); RESULT = pl; 
              CUP$REParser$result = new java_cup.runtime.Symbol(21/*PatternList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // Pattern ::= StartTagPattern EndTag BindingAs 
            {
              pattern RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		stp s = (stp)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		data b = (data)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new patternLeafNode(s.getRegExp(), s.getAttrList(), b); 
              CUP$REParser$result = new java_cup.runtime.Symbol(20/*Pattern*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Pattern ::= StartTagPattern Expression EndTag BindingAs 
            {
              pattern RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).right;
		stp s = (stp)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-3)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		Atom e = (Atom)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		data b = (data)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new patternLeafNode(s.getRegExp(), s.getAttrList(), e, b); 
              CUP$REParser$result = new java_cup.runtime.Symbol(20/*Pattern*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Pattern ::= StartTagPattern PatternList EndTag BindingAs 
            {
              pattern RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).right;
		stp s = (stp)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-3)).value;
		int plleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int plright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		Vector pl = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		data b = (data)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new patternInternalNode(s.getRegExp(), s.getAttrList(), pl, b); 
              CUP$REParser$result = new java_cup.runtime.Symbol(20/*Pattern*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ConfirmToClause ::= 
            {
              String RESULT = null;
		 RESULT = null; 
              CUP$REParser$result = new java_cup.runtime.Symbol(19/*ConfirmToClause*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // ConfirmToClause ::= CONFORM_TO STRING 
            {
              String RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = s; 
              CUP$REParser$result = new java_cup.runtime.Symbol(19/*ConfirmToClause*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // InClause ::= IN DataSourceSet 
            {
              Vector RESULT = null;
		int dleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		Vector d = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = d; 
              CUP$REParser$result = new java_cup.runtime.Symbol(18/*InClause*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // Condition ::= VAR IN Sets 
            {
              condition RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		Vector s = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new set(v,s); 
              CUP$REParser$result = new java_cup.runtime.Symbol(17/*Condition*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Condition ::= Predicate 
            {
              condition RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		Predicate p = (Predicate)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = p; 
              CUP$REParser$result = new java_cup.runtime.Symbol(17/*Condition*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Condition ::= Pattern InClause ConfirmToClause 
            {
              condition RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		pattern p = (pattern)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector i = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new inClause(p, i, c); 
              CUP$REParser$result = new java_cup.runtime.Symbol(17/*Condition*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ConditionList ::= Condition 
            {
              Vector RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		condition c = (condition)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new Vector(); RESULT.addElement(c); 
              CUP$REParser$result = new java_cup.runtime.Symbol(16/*ConditionList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // ConditionList ::= ConditionList COMMA Condition 
            {
              Vector RESULT = null;
		int clleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int clright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		Vector cl = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		condition c = (condition)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 cl.addElement(c); RESULT = cl; 
              CUP$REParser$result = new java_cup.runtime.Symbol(16/*ConditionList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // QueryInConstructList ::= QueryInConstruct 
            {
              Vector RESULT = null;
		int qleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int qright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		constructBaseNode q = (constructBaseNode)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new Vector(); RESULT.addElement(q); 
              CUP$REParser$result = new java_cup.runtime.Symbol(15/*QueryInConstructList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // QueryInConstructList ::= QueryInConstructList QueryInConstruct 
            {
              Vector RESULT = null;
		int qlleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int qlright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector ql = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		int qleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int qright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		constructBaseNode q = (constructBaseNode)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 ql.addElement(q); RESULT = ql; 
              CUP$REParser$result = new java_cup.runtime.Symbol(15/*QueryInConstructList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // Element ::= StartTag EndTag 
            {
              constructBaseNode RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		startTag s = (startTag)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		
			Vector v1 = new Vector();
			RESULT = new constructInternalNode(s,v1);
		
              CUP$REParser$result = new java_cup.runtime.Symbol(14/*Element*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // Element ::= StartTag NUMBER EndTag 
            {
              constructBaseNode RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		startTag s = (startTag)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		
			Vector v1 = new Vector();
			v1.addElement(new constructLeafNode(new data(dataType.STRING,i)));
			RESULT = new constructInternalNode(s,v1);
		
              CUP$REParser$result = new java_cup.runtime.Symbol(14/*Element*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Element ::= StartTag IDEN EndTag 
            {
              constructBaseNode RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		startTag s = (startTag)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		
			Vector v1 = new Vector();
			v1.addElement(new constructLeafNode(new data(dataType.IDEN,i)));
			RESULT = new constructInternalNode(s,v1);
		
              CUP$REParser$result = new java_cup.runtime.Symbol(14/*Element*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Element ::= StartTag QueryInConstructList EndTag 
            {
              constructBaseNode RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		startTag s = (startTag)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int qlleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int qlright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector ql = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		 RESULT = new constructInternalNode(s, ql); 
              CUP$REParser$result = new java_cup.runtime.Symbol(14/*Element*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // QueryInConstruct ::= QueryBlock 
            {
              constructBaseNode RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(13/*QueryInConstruct*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // QueryInConstruct ::= VAR 
            {
              constructBaseNode RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new constructLeafNode(new data(dataType.VAR,v)); 
              CUP$REParser$result = new java_cup.runtime.Symbol(13/*QueryInConstruct*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // QueryInConstruct ::= Element 
            {
              constructBaseNode RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		constructBaseNode e = (constructBaseNode)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = e; 
              CUP$REParser$result = new java_cup.runtime.Symbol(13/*QueryInConstruct*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // ConstructPart ::= CONSTRUCT QueryInConstruct 
            {
              constructBaseNode RESULT = null;
		int qleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int qright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		constructBaseNode q = (constructBaseNode)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = q; 
              CUP$REParser$result = new java_cup.runtime.Symbol(12/*ConstructPart*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // ConstructPart ::= OrderedBy CONSTRUCT QueryInConstruct 
            {
              constructBaseNode RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(12/*ConstructPart*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // WherePart ::= WHERE ConditionList 
            {
              Vector RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		Vector c = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = c; 
              CUP$REParser$result = new java_cup.runtime.Symbol(11/*WherePart*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Query ::= WherePart ConstructPart 
            {
              query RESULT = null;
		int wleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		Vector w = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		constructBaseNode c = (constructBaseNode)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new query(w, c); 
              CUP$REParser$result = new java_cup.runtime.Symbol(10/*Query*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // SubBlock ::= LBRACE QueryBlock RBRACE 
            {
              Object RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(9/*SubBlock*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // SubBlockList ::= SubBlock 
            {
              Object RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(8/*SubBlockList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // SubBlockList ::= SubBlockList SubBlock 
            {
              Object RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(8/*SubBlockList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // QueryBlock ::= Query 
            {
              query RESULT = null;
		int qleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int qright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		query q = (query)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = q; 
              CUP$REParser$result = new java_cup.runtime.Symbol(7/*QueryBlock*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // QueryBlock ::= SubBlockList 
            {
              query RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(7/*QueryBlock*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // QueryBlock ::= Query SubBlockList 
            {
              query RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(7/*QueryBlock*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Arg ::= VAR COLON STRING 
            {
              arg RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new arg(v,s); 
              CUP$REParser$result = new java_cup.runtime.Symbol(6/*Arg*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ArgList ::= Arg 
            {
              Vector RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		arg a = (arg)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = new Vector(); RESULT.addElement(a); 
              CUP$REParser$result = new java_cup.runtime.Symbol(5/*ArgList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ArgList ::= ArgList COMMA Arg 
            {
              Vector RESULT = null;
		int alleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left;
		int alright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).right;
		Vector al = (Vector)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		arg a = (arg)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 if(al.contains(a)) 
			System.out.println("error");
		   else {
			al.addElement(a);
			RESULT=al;
		   }
		
              CUP$REParser$result = new java_cup.runtime.Symbol(5/*ArgList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ReturnType ::= 
            {
              String RESULT = null;
		 RESULT = null; 
              CUP$REParser$result = new java_cup.runtime.Symbol(4/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ReturnType ::= COLON STRING 
            {
              String RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = s; 
              CUP$REParser$result = new java_cup.runtime.Symbol(4/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Func ::= FUNCTION IDEN LPAREN RPAREN ReturnType QueryBlock END 
            {
              Object RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(3/*Func*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Func ::= FUNCTION IDEN LPAREN ArgList RPAREN ReturnType QueryBlock END 
            {
              Object RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(3/*Func*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // FuncList ::= 
            {
              Object RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(2/*FuncList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // FuncList ::= FuncList Func 
            {
              Object RESULT = null;

              CUP$REParser$result = new java_cup.runtime.Symbol(2/*FuncList*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Xmlql ::= FuncList QueryBlock 
            {
              query RESULT = null;
		int qleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).left;
		int qright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right;
		query q = (query)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-0)).value;
		 RESULT = q; 
              CUP$REParser$result = new java_cup.runtime.Symbol(1/*Xmlql*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          return CUP$REParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= RegularExpression EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).right;
		regExp start_val = (regExp)((java_cup.runtime.Symbol) CUP$REParser$stack.elementAt(CUP$REParser$top-1)).value;
		RESULT = start_val;
              CUP$REParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$REParser$stack.elementAt(CUP$REParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$REParser$parser.done_parsing();
          return CUP$REParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

