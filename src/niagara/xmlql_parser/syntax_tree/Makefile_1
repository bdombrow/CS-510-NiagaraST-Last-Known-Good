############################################################################
#
# Build the XML-QL parser
#
#  Usage
#  ------------------------------------------------------------
#  make:          builds all class files
#  make install:  re-builds parser jar file in the installed lib dir
#  make clean:    deletes all class files
#
############################################################################

#-------------------------------------
# Specify all relative path info here
#-------------------------------------
NIAGROOT    = ../../..
JAVA_HOME   = /s/jdk1.2
API         = /p/niagra/api
QEDIR       = $(NIAGROOT)/src/query_engine/
FSMDIR      = $(NIAGROOT)/src/data_manager/ScanFile/FSM/
DMDIR       = $(NIAGROOT)/src/data_manager/DiskMgr/
LIBDIR      = $(NIAGROOT)/lib
TARG_LIB    = $(LIBDIR)/xmlql_parser.jar

#------------------------------------
#  Java libs and tools
#------------------------------------
BASELIB     = $(JAVA_HOME)/lib/rt.jar:$(JAVA_HOME)/lib/i18n.jar
JAVAC       = $(JAVA_HOME)/bin/javac
JAVA        = $(JAVA_HOME)/bin/java
JAR         = $(JAVA_HOME)/bin/jar
JAVADOC     = $(JAVA_HOME)/bin/javadoc

#-------------------------------------
#  Other required libs
#-------------------------------------
PARSELIB    = $(LIBDIR)/xml4j.jar
COMMONLIB   = $(LIBDIR)/common.jar
CUPLIB      = $(LIBDIR)/cup_all.jar
JFLEXLIB    = $(LIBDIR)/JFlex.zip
QELIB	    = $(LIBDIR)/qe.jar

CLASSPATH  = .:$(BASELIB):$(JFLEXLIB):$(CUPLIB):$(PARSELIB):$(QELIB):$(COMMONLIB)

JAVAFLAGS  = -classpath $(CLASSPATH)
#############################################################################


OBJ = EscapedUnicodeReader.class   \
      Util.class		   \
      Schema.class		   \
      SchemaUnit.class		   \
      arg.class                    \
      attr.class                   \
      schemaAttribute.class	   \
      condition.class              \
      set.class			   \
      inClause.class		   \
      data.class                   \
      constructBaseNode.class      \
      constructLeafNode.class      \
      constructInternalNode.class  \
      opType.class                 \
      dataType.class		   \
      varType.class		   \
      pattern.class                \
      patternInternalNode.class    \
      patternLeafNode.class        \
      pnode.class		   \
      predicate.class              \
      predArithOpNode.class	   \
      predLogOpNode.class	   \
      query.class                  \
      regExp.class           	   \
      regExpOpNode.class           \
      regExpDataNode.class         \
      varTbl.class		   \
      varToAttr.class		   \
      skolem.class                 \
      startTag.class               \
      stp.class                    \
      xqlExt.class                 \

###############################################################################

all: Lexer.class sym.class Scanner.class QueryParser.class $(OBJ)


EscapedUnicodeReader.class: EscapedUnicodeReader.java
	$(JAVAC) $(JAVAFLAGS) EscapedUnicodeReader.java
Lexer.class: Lexer.java
	$(JAVAC) $(JAVAFLAGS) Lexer.java
Util.class: Util.java
	$(JAVAC) $(JAVAFLAGS) Util.java
Schema.class: Schema.java
	$(JAVAC) $(JAVAFLAGS) Schema.java
SchemaUnit.class: SchemaUnit.java
	$(JAVAC) $(JAVAFLAGS) SchemaUnit.java
arg.class: arg.java
	$(JAVAC) $(JAVAFLAGS) arg.java
attr.class: attr.java
	$(JAVAC) $(JAVAFLAGS) attr.java
schemaAttribute.class: schemaAttribute.java
	$(JAVAC) $(JAVAFLAGS) schemaAttribute.java
condition.class: condition.java 
	$(JAVAC) $(JAVAFLAGS) condition.java
set.class: set.java 
	$(JAVAC) $(JAVAFLAGS) set.java
inClause.class: inClause.java 
	$(JAVAC) $(JAVAFLAGS) inClause.java
data.class: data.java 
	$(JAVAC) $(JAVAFLAGS) data.java
constructBaseNode.class: constructBaseNode.java
	$(JAVAC) $(JAVAFLAGS) constructBaseNode.java
constructLeafNode.class: constructLeafNode.java
	$(JAVAC) $(JAVAFLAGS) constructLeafNode.java
constructInternalNode.class: constructInternalNode.java
	$(JAVAC) $(JAVAFLAGS) constructInternalNode.java
opType.class: opType.java
	$(JAVAC) $(JAVAFLAGS) opType.java
dataType.class: dataType.java
	$(JAVAC) $(JAVAFLAGS) dataType.java
varType.class: varType.java
	$(JAVAC) $(JAVAFLAGS) varType.java
pattern.class: pattern.java	
	$(JAVAC) $(JAVAFLAGS) pattern.java
patternInternalNode.class: patternInternalNode.java	
	$(JAVAC) $(JAVAFLAGS) patternInternalNode.java
patternLeafNode.class: patternLeafNode.java	
	$(JAVAC) $(JAVAFLAGS) patternLeafNode.java
pnode.class: pnode.java	
	$(JAVAC) $(JAVAFLAGS) pnode.java
predicate.class: predicate.java
	$(JAVAC) $(JAVAFLAGS) predicate.java
predArithOpNode.class: predArithOpNode.java
	$(JAVAC) $(JAVAFLAGS) predArithOpNode.java
predLogOpNode.class: predLogOpNode.java
	$(JAVAC) $(JAVAFLAGS) predLogOpNode.java
query.class: query.java
	$(JAVAC) $(JAVAFLAGS) query.java
regExp.class: regExp.java
	$(JAVAC) $(JAVAFLAGS) regExp.java
regExpOpNode.class: regExpOpNode.java
	$(JAVAC) $(JAVAFLAGS) regExpOpNode.java
regExpDataNode.class: regExpDataNode.java
	$(JAVAC) $(JAVAFLAGS) regExpDataNode.java
varTbl.class: varTbl.java
	$(JAVAC) $(JAVAFLAGS) varTbl.java
varToAttr.class: varToAttr.java
	$(JAVAC) $(JAVAFLAGS) varToAttr.java
skolem.class: skolem.java
	$(JAVAC) $(JAVAFLAGS) skolem.java
startTag.class: startTag.java
	$(JAVAC) $(JAVAFLAGS) startTag.java
stp.class: stp.java
	$(JAVAC) $(JAVAFLAGS) stp.java
xqlExt.class: xqlExt.java
	$(JAVAC) $(JAVAFLAGS) xqlExt.java

sym.class: sym.java
	$(JAVAC) $(JAVAFLAGS) sym.java
Scanner.class: Scanner.java
	$(JAVAC) $(JAVAFLAGS) Scanner.java
QueryParser.class: QueryParser.java 
	$(JAVAC) $(JAVAFLAGS) QueryParser.java

# Generate QueryParser.java and sym.java
QueryParser.java: xmlql.cup
	$(JAVA) $(JAVAFLAGS) java_cup.Main -expect 5 -parser QueryParser < xmlql.cup
sym.java: xmlql.cup
	$(JAVA) $(JAVAFLAGS) java_cup.Main -expect 5 -parser QueryParser < xmlql.cup 

# Generate the scanner
Scanner.java: xmlql.flex sym.class
	$(JAVA) $(JAVAFLAGS) JFlex.Main xmlql.flex



install: sym.class Scanner.class QueryParser.class $(OBJ)
	$(JAR) -cfv $(TARG_LIB) *.class


#####################################################################

classpath:
	@echo $(CLASSPATH)

clean:
	rm -f *.class *~
	rm -f QueryParser.java sym.java Scanner.java



