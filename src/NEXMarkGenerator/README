COPYRIGHT

The NEXMarkGenerator is a program written in java which
generates a stream of auction data. The structure of the
data is based on the XMark auction schema.

The stream generated by the NEXMarkGenerator is a series of 
xml documents. Each document contains one or more bids, items
and persons. The distribution of items->persons and bids->items
is random(uniform). Output is repeatable. If you run the generator
with the same options, you will get exactly the same results
every time.

To Compile:

make
-or-
javac -source 1.4 *.java


To Run:
java NEXMarkGenerator [-gen-calls gencalls] [-prettyprint true|false]

-gen-calls sets the number of times the generator is called (see
            additional info below)

-prettyprint indicates if the streams should include newlines
             and formatting or not (we find streams without
	     formatting can be parsed significantly faster)

Each call to the generator will generate:
- a person on average 1/10 of the time
- on average 1 item
- on average 10 bids

Also, the first time the generator is run, it will generate 50
items and 50 persons (so there are some items to bid on and some
persons to bid on those items)

So if you specify -gen-calls NUM_GEN_CALLS, you will get 
approxmiately:

Persons: 50 + NUM_GEN_CALLS_/10
Items:   50 + NUM_GEN_CALLS
Bids:    NUM_GEN_CALLS * 10

