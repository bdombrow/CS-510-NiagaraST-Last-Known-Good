digraph tree {
rankdir="LR"
node [shape=record];
node [style=rounded];
"top" [label="OP: plan | {ID: top}"];
"loopdata" [label="OP: csvstream | {ID: loopdata}"];
"detectors" [label="OP: csvstream | {ID: detectors}"];
"dup1" [label="OP: dup | {ID: dup1}"];
"detectors_a" [label="OP: rename | {ID: detectors_a}"];
"detectors_r" [label="OP: dup | {ID: detectors_r}"];
"occupancy_or_speed" [label="OP: select | {ID: occupancy_or_speed}"];
"speed_and_volume_ok_1" [label="OP: select | {ID: speed_and_volume_ok_1}"];
"speed_and_volume_ok_2" [label="OP: select | {ID: speed_and_volume_ok_2}"];
"good" [label="OP: select | {ID: good}"];
"join_good" [label="OP: join | {ID: join_good}"];
"join_good_dup" [label="OP: dup | {ID: join_good_dup}"];
"good_speed_bucket" [label="OP: bucket | {ID: good_speed_bucket}"];
"good_volume_bucket" [label="OP: bucket | {ID: good_volume_bucket}"];
"good_occupancy_bucket" [label="OP: bucket | {ID: good_occupancy_bucket}"];
"speed_avg" [label="OP: windowAverage | {ID: speed_avg}"];
"volume_avg" [label="OP: windowAverage | {ID: volume_avg}"];
"occupancy_avg" [label="OP: windowAverage | {ID: occupancy_avg}"];
"speed_avg_r" [label="OP: rename | {ID: speed_avg_r}"];
"volume_avg_r" [label="OP: rename | {ID: volume_avg_r}"];
"occupancy_avg_r" [label="OP: rename | {ID: occupancy_avg_r}"];
"join_speed_volume_avg" [label="OP: join | {ID: join_speed_volume_avg}"];
"substitute" [label="OP: join | {ID: substitute}"];
"occupancy_or_speed_gt" [label="OP: select | {ID: occupancy_or_speed_gt}"];
"speed_0_and_volume_not_0" [label="OP: select | {ID: speed_0_and_volume_not_0}"];
"volume_0_and_speed_not_0" [label="OP: select | {ID: volume_0_and_speed_not_0}"];
"volume_0_and_occupancy_not_0" [label="OP: select | {ID: volume_0_and_occupancy_not_0}"];
"bad" [label="OP: union | {ID: bad}"];
"join_bad_detectors" [label="OP: join | {ID: join_bad_detectors}"];
"project_bad" [label="OP: construct | {ID: project_bad}"];
"bad_to_join" [label="OP: rename | {ID: bad_to_join}"];
"replacement" [label="OP: join | {ID: replacement}"];
"result" [label="OP: union | {ID: result}"];
"result" -> "top";
"loopdata" -> "dup1";
"detectors" -> "detectors_a";
"detectors_a" -> "detectors_r";
"dup1" -> "occupancy_or_speed";
"occupancy_or_speed" -> "speed_and_volume_ok_1";
"speed_and_volume_ok_1" -> "speed_and_volume_ok_2";
"speed_and_volume_ok_2" -> "good";
"good" -> "join_good";
"detectors_r" -> "join_good";
"join_good" -> "join_good_dup";
"join_good_dup" -> "good_speed_bucket";
"join_good_dup" -> "good_volume_bucket";
"join_good_dup" -> "good_occupancy_bucket";
"good_speed_bucket" -> "speed_avg";
"good_volume_bucket" -> "volume_avg";
"good_occupancy_bucket" -> "occupancy_avg";
"speed_avg" -> "speed_avg_r";
"volume_avg" -> "volume_avg_r";
"occupancy_avg" -> "occupancy_avg_r";
"speed_avg_r" -> "join_speed_volume_avg";
"volume_avg_r" -> "join_speed_volume_avg";
"join_speed_volume_avg" -> "substitute";
"occupancy_avg_r" -> "substitute";
"dup1" -> "occupancy_or_speed_gt";
"dup1" -> "speed_0_and_volume_not_0";
"dup1" -> "volume_0_and_speed_not_0";
"dup1" -> "volume_0_and_occupancy_not_0";
"occupancy_or_speed_gt" -> "bad";
"speed_0_and_volume_not_0" -> "bad";
"volume_0_and_speed_not_0" -> "bad";
"volume_0_and_occupancy_not_0" -> "bad";
"bad" -> "join_bad_detectors";
"detectors_r" -> "join_bad_detectors";
"join_bad_detectors" -> "project_bad";
"project_bad" -> "bad_to_join";
"bad_to_join" -> "replacement";
"substitute" -> "replacement";
"replacement" -> "result";
"good" -> "result";
}
